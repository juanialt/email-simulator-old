define({ "api": [
  {
    "type": "POST",
    "url": "/comments",
    "title": "Push a Comment to an album",
    "name": "CreateComment",
    "group": "Comments",
    "version": "1.0.0",
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "Number",
            "optional": false,
            "field": "400",
            "description": "<p>The Object Sent was invalid.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"Comment validation failed\",\n  \"name\": \"ValidationError\",\n  \"errors\": {\n    \"email\": {\n      \"message\": \"Email is required.\",\n      \"name\": \"ValidatorError\",\n      \"properties\": {\n        \"type\": \"required\",\n        \"message\": \"Email is required.\",\n        \"path\": \"email\"\n      },\n      \"kind\": \"required\",\n      \"path\": \"email\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "String",
            "optional": false,
            "field": "albumId",
            "description": "<p>The id of the album (via Spotify).</p>"
          },
          {
            "group": "200",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of who commented.</p>"
          },
          {
            "group": "200",
            "type": "String",
            "optional": false,
            "field": "text",
            "description": "<p>The comment.</p>"
          },
          {
            "group": "200",
            "type": "String",
            "optional": false,
            "field": "avatar",
            "description": "<p>Gravatar URL to Display (autogenerated, based on email).</p>"
          },
          {
            "group": "200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the comment.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"__v\": 0,\n  \"albumId\": \"12Chz98pHFMPJEknJQMWvI\",\n  \"email\": \"nahuel.veron@lateralview.net\",\n  \"text\": \"The Resistance is one of my favorites Muse Albums\",\n  \"_id\": \"582a47a82df306000f2e1d30\",\n  \"avatar\": \"https://www.gravatar.com/avatar/351e5e48fe41e78a658763409a9da591\",\n  \"id\": \"582a47a82df306000f2e1d30\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "C:/Users/Juani/Documents/GitHub/spotify-exercise/server/comment.js",
    "groupTitle": "Comments"
  },
  {
    "type": "GET",
    "url": "/comments/:albumId",
    "title": "Request All the Comments based on the <code>albumId</code>",
    "name": "GetComments",
    "group": "Comments",
    "version": "1.0.0",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "Object[]",
            "optional": false,
            "field": "Comments",
            "description": ""
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"__v\": 0,\n    \"albumId\": \"12Chz98pHFMPJEknJQMWvI\",\n    \"email\": \"nahuel.veron@lateralview.net\",\n    \"text\": \"The Resistance is one of my favorites Muse Albums\",\n    \"_id\": \"582a47a82df306000f2e1d30\",\n    \"avatar\": \"https://www.gravatar.com/avatar/351e5e48fe41e78a658763409a9da591\",\n    \"id\": \"582a47a82df306000f2e1d30\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "filename": "C:/Users/Juani/Documents/GitHub/spotify-exercise/server/comment.js",
    "groupTitle": "Comments"
  },
  {
    "type": "GET",
    "url": "/album/{albumId}",
    "title": "Get a Album by his Id",
    "name": "Album",
    "group": "SpotifyAPI",
    "version": "1.0.0",
    "description": "<p>This is just a proxy between the local server and the real Spotify api, the documentation of the response is here: https://developer.spotify.com/web-api/get-album/</p>",
    "filename": "C:/Users/Juani/Documents/GitHub/spotify-exercise/server/album.js",
    "groupTitle": "SpotifyAPI"
  },
  {
    "type": "GET",
    "url": "/search?q={searchPayload}",
    "title": "Search inside the Spotify API for Albums",
    "name": "Search",
    "group": "SpotifyAPI",
    "version": "1.0.0",
    "description": "<p>This is just a proxy between the local server and the real Spotify api, the documentation of the response is here: https://developer.spotify.com/web-api/search-item/</p>",
    "filename": "C:/Users/Juani/Documents/GitHub/spotify-exercise/server/search.js",
    "groupTitle": "SpotifyAPI"
  }
] });
